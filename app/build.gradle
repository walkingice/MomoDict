apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: 'kotlin-kapt'
apply plugin: 'checkstyle'

check.dependsOn 'checkstyle'
check.dependsOn 'ktlint'

configurations {
    ktlint
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "org.zeroxlab.momodict"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // ./gradlew --stacktrace :app:assembleDebug found issue:
    //     "More than one file was found with OS independent path 'META-INF/library-core_release.kotlin_module'"
    // maybe 'realm' should remove this file?
    packagingOptions {
        exclude 'META-INF/library-core_release.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:${androidXVersion}"
    implementation "androidx.core:core-ktx:${androidXKtxCoreVersion}"
    implementation "androidx.fragment:fragment:${androidXVersion}"
    implementation "androidx.cardview:cardview:${androidXVersion}"
    implementation "androidx.recyclerview:recyclerview:${androidXVersion}"
    implementation "com.google.android.material:material:${androidXVersion}"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${androidXLifecycleVersion}"

    implementation "androidx.room:room-ktx:${androidRoomVersion}"
    kapt "androidx.room:room-compiler:${androidRoomVersion}"

    implementation "androidx.constraintlayout:constraintlayout:${androidXConstraintLayoutVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${kotlinCoroutinesVersion}"

    // For license detection
    // https://github.com/mikepenz/AboutLibraries
    implementation "com.mikepenz:aboutlibraries:${aboutLibrariesVersion}"

    // to install apache library
    implementation 'org.apache.commons:commons-compress:1.13'
    implementation group: 'commons-io', name: 'commons-io', version: '2.4'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.2-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "junit:junit:${junitVersion}"

    testImplementation "org.robolectric:robolectric:${robolectricVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"

    // Test helpers for Room
    testImplementation "androidx.room:room-testing:${androidRoomTestingVersion}"

    ktlint "com.github.shyiko:ktlint:${ktlintVersion}"
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // prepend "--reporter=plain?group_by_file" arg to change the reporter
    // see https://github.com/shyiko/ktlint
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/quality/square_picasso_checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}

repositories {
    mavenCentral()
}
